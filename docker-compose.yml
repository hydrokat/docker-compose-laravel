version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - 80:80
      - 6001:6001
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - cron
      - mysql
      - mailhog
    networks:
      - laravel

  mysql:
    image: mysql:8
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME} 
      MYSQL_PASSWORD: ${DB_PASSWORD} 
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 512M
        reservations:
          cpus: 0.25
          memory: 128M
      replicas: 4
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  phpws:
    build:
      context: .
      dockerfile: php.dockerfile
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 512M
        reservations:
          cpus: 0.25
          memory: 128M
      replicas: 4
    # ports:
    #   - 6001:6001
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  cron:
    build:
      context: .
      dockerfile: cron.dockerfile
    container_name: cron
    volumes: 
      - ./src:/var/www/html
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel
